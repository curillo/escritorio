// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract NonTransferableToken is ERC721, Ownable {
    uint256 private _tokenIdCounter;

    constructor(string memory name, string memory symbol) ERC721(name, symbol) {
        _tokenIdCounter = 1;
    }

    function mint(address to) public onlyOwner {
        _safeMint(to, _tokenIdCounter);
        _tokenIdCounter += 1;
    }

    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override {
        require(to == address(0), "NonTransferableToken: tokens are non-transferable");
        super._beforeTokenTransfer(from, to, tokenId);
    }
}

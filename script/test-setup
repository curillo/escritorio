#!/usr/bin/env node

'use strict'

const fs = require('fs')
const path = require('path')
const cp = require('child_process')
const { getUserDataPath, getDistPath, getProductName } = require('./dist-info')

const isFork = process.env.TRAVIS_SECURE_ENV_VARS !== 'true'

if (process.platform === 'darwin' && process.env.TRAVIS && !isFork) {
  const archive = `${getDistPath()}/${getProductName()}.app`
  try {
    console.log('validating signature of Desktop app')
    cp.execSync(`codesign -dv --verbose=4 '${archive}'`)
  } catch (err) {
    process.exit(1)
  }
  console.log('\n\n')
}

const output = cp.execSync('git config -l --show-origin', { encoding: 'utf-8' })
console.log(`Git config:\n${output}\n\n`)

// clear existing log files
const directory = path.join(getUserDataPath(), 'logs')
if (!fs.existsSync(directory)) {
  return
}

const files = fs.readdirSync(directory)
files.forEach(file => {
  if (file.endsWith('.log')) {
    console.log(`deleting ${file}`)
    const fullPath = path.join(directory, file)
    fs.unlinkSync(fullPath)
  }
})
